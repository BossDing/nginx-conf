server {
    server_name echo.xuexb.com;

    root /home/wwwroot/echo.xuexb.com;

    # 加载ssl证书
    include inc/ssl.conf;

    # 加载公用robots.txt
    include inc/robots.conf;

    # 加载公用favicon
    include inc/favicon.conf;

    default_type text/plain;

    error_log   /home/wwwlog/nginx/new/error/echo.xuexb.com.log     warn;
    access_log  /home/wwwlog/nginx/new/access/echo.xuexb.com.log    main;

    location ~* ^/api/dump(\/.*)?$ {
        default_type text/html;

        echo '<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <title>输出nginx全局变量</title>
    <meta http-equiv="X-UA-Compatible" content="IE=Edge">
    <meta name="viewport" content="width=device-width,minimum-scale=1.0,maximum-scale=1.0">
    <style>
        table {
  border-collapse: collapse;
  border-spacing: 0;
  display: block;
  width: 100%;
  overflow: auto;
  word-break: normal;
  word-break: keep-all;
}
td,th {
  padding: 0;
}

th {
  font-weight: bold;
}

th,
td {
  padding: 6px 13px;
  border: 1px solid #ddd;
}

tr {
  background-color: #fff;
  border-top: 1px solid #ccc;
}

tr:nth-child(2n) {
  background-color: #f8f8f8;
}
    </style>
</head>
<body>
<h1>输出nginx全局变量</h1>
<table>
    <thead>
        <tr>
            <th>变量名</th>
            <th>结果</th>
            <th>备注</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>body_bytes_sent</td>
            <td>$body_bytes_sent</td>
            <td>2</td>
        </tr>
        <tr>
            <td>1</td>
            <td>1</td>
            <td>2</td>
        </tr>
    </tbody>
</table>
</body>
</html>';
    }

    # 简单的hello, world!
    location = /api/hello {
        echo "hello, world!";
    }

    # 反向代理添加前置、后置内容
    location = /api/proxy_before_after {
        echo_before_body echo_before_body;
        echo_before_body echo_before_body;
        proxy_pass http://127.0.0.1;
        echo_after_body echo_after_body;
        echo_after_body echo_after_body;
    }

    # sleep测试
    location ~* ^/api/sleep(\/\d*\/?)?$ {
        echo "{";
        echo "  request_uri=$request_uri";

        set $time 2;
        if ($uri ~* ^(.+?)/(\d+)/?$) {
            set $time $2;
        }

        echo_sleep   $time;
        echo "  time=$time";
        echo "}";
    }

    # 异步调用
    location = /api/location_async {
        echo location_async;

        # 重置时间
        echo_reset_timer;

        # subrequests in parallel
        echo_location_async /api/sleep/1;
        echo_location_async /api/sleep/2;

        echo "took $echo_timer_elapsed sec for total.";
    }

    # 同步调用
    location = /api/location {
        echo location;

        # 重置时间
        echo_reset_timer;

        # subrequests in parallel
        echo_location /api/sleep/1;
        echo_location /api/sleep/2;

        echo "took $echo_timer_elapsed sec for total.";
    }

    # 重复
    location = /api/duplicate {
         echo_duplicate 3 "hello, world";
    }

    # 分隔 ?list=aa,bb
    location = /api/split {
        echo_foreach_split ',' $arg_list;
            echo "item: $echo_it";
        echo_end;
    }

    # 模拟combo
    location = /api/combo {
        echo_foreach_split ',' $query_string;
            echo "/* combo: $echo_it */";
            echo_location_async $echo_it;
            echo;
        echo_end;
    }

    # 输出内容
    location ~* ^/api/echo(\/[^\/]*?\/?)?$ {
        set $str 'null';
        if ($uri ~* ^/api/echo/([^\/]+)/?$) {
            set $str $1;
        }
        echo $str;
    }
}

server {
    listen 80;
    server_name echo.xuexb.com;

    include inc/acme-challenge.conf;

    access_log  off;
    error_log   off;

    add_header strict-transport-security 'max-age=31536000; includeSubDomains; preload';

    location / {
        rewrite ^(.*) https://echo.xuexb.com$1 permanent;
    }
}