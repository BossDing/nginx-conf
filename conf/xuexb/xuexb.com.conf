proxy_cache_path    /var/cache/nginx/xuexb.com levels=1:2 keys_zone=blog_nginx_cache:100m inactive=30d max_size=1g use_temp_path=off;

server {
    server_name xuexb.com www.xuexb.com;
    root /home/xiaowu/github/blog/www;

    index index.html index.htm;

    # 加载 SSL 公用配置
    include inc/ssl.xuexb.com.conf;

    # 404重写
    error_page 404 = /404.html;
    
    error_log   /var/log/nginx/xuexb.com/last/error.log   warn;
    access_log  /var/log/nginx/xuexb.com/last/access.log  nginx_cache_json;

    # 禁止访问mip, amp, admin
    location ^~ /admin {
        return 403;
    }
    location ^~ /mip {
        return 403;
    }
    location ^~ /amp {
        return 403;
    }

    resolver                   114.114.114.114 valid=300s;
    resolver_timeout           10s;

    # 拒绝访问根目录下的js配置
    location ~* ^/[^\/]+\.js$ {
        return 403;
    }

    if ($request_method !~ ^(GET|HEAD|POST|OPTIONS)$ ) {
        return 403;
    }

    etag on;
    gzip on;

    # 静态文件
    location ^~ /static/ {
        add_header                  Access-Control-Allow-Origin *;      
        expires                     max;
    }

    # 第三方登录 Demo
    # 因为第三方只能在 xuexb.com 域下
    location ^~ /web-oauth-app {
        proxy_http_version 1.1;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_pass http://127.0.0.1:8020$request_uri;
        proxy_redirect off;
    }

    # 做 Nginx 缓存
    location / {
        proxy_cache_revalidate      on;

        # 设置缓存和key和时间
        proxy_cache                 blog_nginx_cache;
        proxy_cache_key             $host$uri$is_args$args;
        proxy_cache_methods         GET;
        proxy_cache_valid           200 304 30d;
        proxy_cache_valid           any 1h;

        proxy_connect_timeout       10s;
        proxy_read_timeout          10s;
        proxy_cache_lock            on;
        proxy_cache_lock_timeout    5s;

        # 当源站500, 502时使用过期的缓存
        proxy_cache_use_stale       updating error timeout invalid_header http_500 http_502;

        # 链接中有 nocache 时忽略缓存
        proxy_cache_bypass          $arg_nocache;

        # 添加缓存状态
        add_header                  Nginx-Cache-Status "$upstream_cache_status";
        
        expires                     1h;

        sub_filter_last_modified    on;
        sub_filter                  'echo_nginx_cache_status'  '<a href="//cache.xuexb.com"><img src="https://img.shields.io/badge/cache-$upstream_cache_status-brightgreen.svg" alt="nginx缓存状态"></a>';
        sub_filter_once             on;

        proxy_ignore_headers        Set-Cookie;
        proxy_hide_header           X-Powered-By;
        proxy_hide_header           vary;

        # 设置代理
        proxy_set_header            Connection "";
        proxy_set_header            X-Real-IP $remote_addr;
        proxy_set_header            X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header            Host $http_host;
        proxy_set_header            X-NginX-Proxy true;
        proxy_pass                  http://127.0.0.1:8003$request_uri;
        proxy_redirect              off;
    }
}